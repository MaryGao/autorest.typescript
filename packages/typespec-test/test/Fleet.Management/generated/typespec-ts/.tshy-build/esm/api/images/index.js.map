{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/api/images/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { getLongRunningPoller } from \"../pollingHelpers.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\nimport { Image, ImageListResult } from \"../../models/models.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport { buildPagedAsyncIterator } from \"../pagingHelpers.js\";\nimport {\n  isUnexpected,\n  AzureSphereContext as Client,\n  ImagesCreateOrUpdate200Response,\n  ImagesCreateOrUpdate201Response,\n  ImagesCreateOrUpdateDefaultResponse,\n  ImagesCreateOrUpdateLogicalResponse,\n  ImagesDelete200Response,\n  ImagesDelete202Response,\n  ImagesDelete204Response,\n  ImagesDeleteDefaultResponse,\n  ImagesDeleteLogicalResponse,\n  ImagesGet200Response,\n  ImagesGetDefaultResponse,\n  ImagesListByCatalog200Response,\n  ImagesListByCatalogDefaultResponse,\n} from \"../../rest/index.js\";\nimport {\n  StreamableMethod,\n  operationOptionsToRequestParameters,\n  createRestError,\n} from \"@azure-rest/core-client\";\nimport {\n  ImagesGetOptionalParams,\n  ImagesCreateOrUpdateOptionalParams,\n  ImagesDeleteOptionalParams,\n  ImagesListByCatalogOptionalParams,\n} from \"../../models/options.js\";\n\nexport function _getSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  imageName: string,\n  options: ImagesGetOptionalParams = { requestOptions: {} },\n): StreamableMethod<ImagesGet200Response | ImagesGetDefaultResponse> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/images/{imageName}\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n      imageName,\n    )\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _getDeserialize(\n  result: ImagesGet200Response | ImagesGetDefaultResponse,\n): Promise<Image> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    type: result.body[\"type\"],\n    systemData: !result.body.systemData\n      ? undefined\n      : {\n          createdBy: result.body.systemData?.[\"createdBy\"],\n          createdByType: result.body.systemData?.[\"createdByType\"],\n          createdAt:\n            result.body.systemData?.[\"createdAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"createdAt\"])\n              : undefined,\n          lastModifiedBy: result.body.systemData?.[\"lastModifiedBy\"],\n          lastModifiedByType: result.body.systemData?.[\"lastModifiedByType\"],\n          lastModifiedAt:\n            result.body.systemData?.[\"lastModifiedAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"lastModifiedAt\"])\n              : undefined,\n        },\n    properties: !result.body.properties\n      ? undefined\n      : {\n          image: result.body.properties?.[\"image\"],\n          imageId: result.body.properties?.[\"imageId\"],\n          imageName: result.body.properties?.[\"imageName\"],\n          regionalDataBoundary:\n            result.body.properties?.[\"regionalDataBoundary\"],\n          uri: result.body.properties?.[\"uri\"],\n          description: result.body.properties?.[\"description\"],\n          componentId: result.body.properties?.[\"componentId\"],\n          imageType: result.body.properties?.[\"imageType\"],\n          provisioningState: result.body.properties?.[\"provisioningState\"],\n        },\n  };\n}\n\n/** Get a Image */\nexport async function get(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  imageName: string,\n  options: ImagesGetOptionalParams = { requestOptions: {} },\n): Promise<Image> {\n  const result = await _getSend(\n    context,\n    subscriptionId,\n    resourceGroupName,\n    catalogName,\n    imageName,\n    options,\n  );\n  return _getDeserialize(result);\n}\n\nexport function _createOrUpdateSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  imageName: string,\n  resource: Image,\n  options: ImagesCreateOrUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | ImagesCreateOrUpdate200Response\n  | ImagesCreateOrUpdate201Response\n  | ImagesCreateOrUpdateDefaultResponse\n  | ImagesCreateOrUpdateLogicalResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/images/{imageName}\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n      imageName,\n    )\n    .put({\n      ...operationOptionsToRequestParameters(options),\n      body: {\n        properties: !resource.properties\n          ? undefined\n          : {\n              image: resource.properties?.[\"image\"],\n              imageId: resource.properties?.[\"imageId\"],\n              regionalDataBoundary:\n                resource.properties?.[\"regionalDataBoundary\"],\n            },\n      },\n    });\n}\n\nexport async function _createOrUpdateDeserialize(\n  result:\n    | ImagesCreateOrUpdate200Response\n    | ImagesCreateOrUpdate201Response\n    | ImagesCreateOrUpdateDefaultResponse\n    | ImagesCreateOrUpdateLogicalResponse,\n): Promise<Image> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  result = result as ImagesCreateOrUpdateLogicalResponse;\n  return {\n    id: result.body[\"id\"],\n    type: result.body[\"type\"],\n    systemData: !result.body.systemData\n      ? undefined\n      : {\n          createdBy: result.body.systemData?.[\"createdBy\"],\n          createdByType: result.body.systemData?.[\"createdByType\"],\n          createdAt:\n            result.body.systemData?.[\"createdAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"createdAt\"])\n              : undefined,\n          lastModifiedBy: result.body.systemData?.[\"lastModifiedBy\"],\n          lastModifiedByType: result.body.systemData?.[\"lastModifiedByType\"],\n          lastModifiedAt:\n            result.body.systemData?.[\"lastModifiedAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"lastModifiedAt\"])\n              : undefined,\n        },\n    properties: !result.body.properties\n      ? undefined\n      : {\n          image: result.body.properties?.[\"image\"],\n          imageId: result.body.properties?.[\"imageId\"],\n          imageName: result.body.properties?.[\"imageName\"],\n          regionalDataBoundary:\n            result.body.properties?.[\"regionalDataBoundary\"],\n          uri: result.body.properties?.[\"uri\"],\n          description: result.body.properties?.[\"description\"],\n          componentId: result.body.properties?.[\"componentId\"],\n          imageType: result.body.properties?.[\"imageType\"],\n          provisioningState: result.body.properties?.[\"provisioningState\"],\n        },\n  };\n}\n\n/** Create a Image */\nexport function createOrUpdate(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  imageName: string,\n  resource: Image,\n  options: ImagesCreateOrUpdateOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<Image>, Image> {\n  return getLongRunningPoller(context, _createOrUpdateDeserialize, {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _createOrUpdateSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        catalogName,\n        imageName,\n        resource,\n        options,\n      ),\n  }) as PollerLike<OperationState<Image>, Image>;\n}\n\nexport function _$deleteSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  imageName: string,\n  options: ImagesDeleteOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | ImagesDelete200Response\n  | ImagesDelete202Response\n  | ImagesDelete204Response\n  | ImagesDeleteDefaultResponse\n  | ImagesDeleteLogicalResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/images/{imageName}\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n      imageName,\n    )\n    .delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _$deleteDeserialize(\n  result:\n    | ImagesDelete200Response\n    | ImagesDelete202Response\n    | ImagesDelete204Response\n    | ImagesDeleteDefaultResponse\n    | ImagesDeleteLogicalResponse,\n): Promise<void> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  result = result as ImagesDeleteLogicalResponse;\n  return;\n}\n\n/** Delete a Image */\n/**\n *  @fixme delete is a reserved word that cannot be used as an operation name.\n *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n *         to the operation to override the generated name.\n */\nexport function $delete(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  imageName: string,\n  options: ImagesDeleteOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _$deleteDeserialize, {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _$deleteSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        catalogName,\n        imageName,\n        options,\n      ),\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _listByCatalogSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: ImagesListByCatalogOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  ImagesListByCatalog200Response | ImagesListByCatalogDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/images\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n    )\n    .get({\n      ...operationOptionsToRequestParameters(options),\n      queryParameters: {\n        $filter: options?.filter,\n        $top: options?.top,\n        $skip: options?.skip,\n        $maxpagesize: options?.maxpagesize,\n      },\n    });\n}\n\nexport async function _listByCatalogDeserialize(\n  result: ImagesListByCatalog200Response | ImagesListByCatalogDefaultResponse,\n): Promise<ImageListResult> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    value: result.body[\"value\"].map((p) => ({\n      id: p[\"id\"],\n      type: p[\"type\"],\n      systemData: !p.systemData\n        ? undefined\n        : {\n            createdBy: p.systemData?.[\"createdBy\"],\n            createdByType: p.systemData?.[\"createdByType\"],\n            createdAt:\n              p.systemData?.[\"createdAt\"] !== undefined\n                ? new Date(p.systemData?.[\"createdAt\"])\n                : undefined,\n            lastModifiedBy: p.systemData?.[\"lastModifiedBy\"],\n            lastModifiedByType: p.systemData?.[\"lastModifiedByType\"],\n            lastModifiedAt:\n              p.systemData?.[\"lastModifiedAt\"] !== undefined\n                ? new Date(p.systemData?.[\"lastModifiedAt\"])\n                : undefined,\n          },\n      properties: !p.properties\n        ? undefined\n        : {\n            image: p.properties?.[\"image\"],\n            imageId: p.properties?.[\"imageId\"],\n            imageName: p.properties?.[\"imageName\"],\n            regionalDataBoundary: p.properties?.[\"regionalDataBoundary\"],\n            uri: p.properties?.[\"uri\"],\n            description: p.properties?.[\"description\"],\n            componentId: p.properties?.[\"componentId\"],\n            imageType: p.properties?.[\"imageType\"],\n            provisioningState: p.properties?.[\"provisioningState\"],\n          },\n    })),\n    nextLink: result.body[\"nextLink\"],\n  };\n}\n\n/** List Image resources by Catalog */\nexport function listByCatalog(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: ImagesListByCatalogOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<Image> {\n  return buildPagedAsyncIterator(\n    context,\n    () =>\n      _listByCatalogSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        catalogName,\n        options,\n      ),\n    _listByCatalogDeserialize,\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n"]}