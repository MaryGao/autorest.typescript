{"version":3,"file":"models.js","sourceRoot":"","sources":["../../../src/rest/models.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/** An Azure Sphere catalog */\nexport interface Catalog extends TrackedResourceBase {\n  /** The resource-specific properties for this resource. */\n  properties?: CatalogProperties;\n}\n\n/** Catalog properties */\nexport interface CatalogProperties {}\n\n/** The resource model definition for an Azure Resource Manager tracked top level resource */\nexport interface TrackedResourceBase extends ArmResource {\n  /** The geo-location where the resource lives */\n  location: string;\n  /** Resource tags. */\n  tags?: Record<string, string>;\n}\n\n/** Common properties for all Azure Resource Manager resources. */\nexport interface ArmResource extends ArmResourceBase {}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {}\n\n/** Base class used for type definitions */\nexport interface ArmResourceBase {}\n\n/** The base proxy resource. */\nexport interface ProxyResourceBase extends ArmResource {}\n\n/** The private endpoint connection resource */\nexport interface PrivateEndpointConnection extends ProxyResourceBase {\n  /** The private endpoint connection properties */\n  properties?: PrivateEndpointConnectionProperties;\n}\n\n/** Properties of he private endpoint connection resource */\nexport interface PrivateEndpointConnectionProperties {\n  /** The private endpoint resource */\n  privateEndpoint?: PrivateEndpoint;\n  /** A collection of information about the state of the connection between service consumer and provider. */\n  privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;\n  /** The provisioning state of the private endpoint connection resource. */\n  provisioningState?: PrivateEndpointConnectionProvisioningState;\n}\n\n/** The private endpoint resource */\nexport interface PrivateEndpoint {\n  /** The resource identifier for private endpoint */\n  id?: string;\n}\n\n/** A collection of information about the state of the connection between service consumer and provider. */\nexport interface PrivateLinkServiceConnectionState {\n  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */\n  status?: PrivateEndpointServiceConnectionStatus;\n  /** The reason for approval/rejection of the connection. */\n  description?: string;\n  /** A message indicating if changes on the service provider require any updates on the consumer. */\n  actionsRequired?: string;\n}\n\nexport interface PrivateLinkResource extends ProxyResourceBase {\n  /** Properties of the private link resource. */\n  properties?: PrivateLinkResourceProperties;\n}\n\n/** Properties of a private link resource. */\nexport interface PrivateLinkResourceProperties {\n  /** The private link resource private link DNS zone name. */\n  requiredZoneNames?: string[];\n}\n\n/** An image resource belonging to a catalog resource. */\nexport interface Image extends ProxyResourceBase {\n  /** The resource-specific properties for this resource. */\n  properties?: ImageProperties;\n}\n\n/** The properties of image */\nexport interface ImageProperties {\n  /** Image as a UTF-8 encoded base 64 string on image create. This field contains the image URI on image reads. */\n  image?: string;\n  /** Image ID */\n  imageId?: string;\n  /** Regional data boundary for an image */\n  regionalDataBoundary?: RegionalDataBoundary;\n}\n\n/** An product resource belonging to a catalog resource. */\nexport interface Product extends ProxyResourceBase {\n  /** The resource-specific properties for this resource. */\n  properties?: ProductProperties;\n}\n\n/** The properties of product */\nexport interface ProductProperties {\n  /** Description of the product */\n  description?: string;\n}\n\n/** An device group resource belonging to a product resource. */\nexport interface DeviceGroup extends ProxyResourceBase {\n  /** The resource-specific properties for this resource. */\n  properties?: DeviceGroupProperties;\n}\n\n/** The properties of deviceGroup */\nexport interface DeviceGroupProperties {\n  /** Description of the device group. */\n  description?: string;\n  /** Operating system feed type of the device group. */\n  osFeedType?: OSFeedType;\n  /** Update policy of the device group. */\n  updatePolicy?: UpdatePolicy;\n  /** Flag to define if the user allows for crash dump collection. */\n  allowCrashDumpsCollection?: AllowCrashDumpCollection;\n  /** Regional data boundary for the device group. */\n  regionalDataBoundary?: RegionalDataBoundary;\n}\n\n/** An deployment resource belonging to a device group resource. */\nexport interface Deployment extends ProxyResourceBase {\n  /** The resource-specific properties for this resource. */\n  properties?: DeploymentProperties;\n}\n\n/** The properties of deployment */\nexport interface DeploymentProperties {\n  /** Deployment ID */\n  deploymentId?: string;\n  /** Images deployed */\n  deployedImages?: Array<Image>;\n}\n\n/** An device resource belonging to a device group resource. */\nexport interface Device extends ProxyResourceBase {\n  /** The resource-specific properties for this resource. */\n  properties?: DeviceProperties;\n}\n\n/** The properties of device */\nexport interface DeviceProperties {\n  /** Device ID */\n  deviceId?: string;\n}\n\n/** An certificate resource belonging to a catalog resource. */\nexport interface Certificate extends ProxyResourceBase {\n  /** The resource-specific properties for this resource. */\n  properties?: CertificateProperties;\n}\n\n/** The properties of certificate */\nexport interface CertificateProperties {}\n\n/** Result of the action to generate a proof of possession nonce */\nexport interface ProofOfPossessionNonceResponse extends CertificateProperties {}\n\n/** The base extension resource. */\nexport interface ExtensionResourceBase extends ArmResource {}\n\n/** The type used for update operations of the Catalog. */\nexport interface CatalogUpdate {\n  /** Resource tags. */\n  tags?: Record<string, string>;\n}\n\n/** Request of the action to list device groups for a catalog. */\nexport interface ListDeviceGroupsRequest {\n  /** Device Group name. */\n  deviceGroupName?: string;\n}\n\n/** Request for the proof of possession nonce */\nexport interface ProofOfPossessionNonceRequest {\n  /** The proof of possession nonce */\n  proofOfPossessionNonce: string;\n}\n\n/** The type used for update operations of the Product. */\nexport interface ProductUpdate {\n  /** The updatable properties of the Product. */\n  properties?: ProductUpdateProperties;\n}\n\n/** The updatable properties of the Product. */\nexport interface ProductUpdateProperties {\n  /** Description of the product */\n  description?: string;\n}\n\n/** The type used for update operations of the DeviceGroup. */\nexport interface DeviceGroupUpdate {\n  /** The updatable properties of the DeviceGroup. */\n  properties?: DeviceGroupUpdateProperties;\n}\n\n/** The updatable properties of the DeviceGroup. */\nexport interface DeviceGroupUpdateProperties {\n  /** Description of the device group. */\n  description?: string;\n  /** Operating system feed type of the device group. */\n  osFeedType?: OSFeedType;\n  /** Update policy of the device group. */\n  updatePolicy?: UpdatePolicy;\n  /** Flag to define if the user allows for crash dump collection. */\n  allowCrashDumpsCollection?: AllowCrashDumpCollection;\n  /** Regional data boundary for the device group. */\n  regionalDataBoundary?: RegionalDataBoundary;\n}\n\n/** Request to the action call to bulk claim devices. */\nexport interface ClaimDevicesRequest {\n  /** Device identifiers of the devices to be claimed. */\n  deviceIdentifiers: string[];\n}\n\n/** The type used for update operations of the Device. */\nexport interface DeviceUpdate {\n  /** The updatable properties of the Device. */\n  properties?: DeviceUpdateProperties;\n}\n\n/** The updatable properties of the Device. */\nexport interface DeviceUpdateProperties {\n  /** Device group id */\n  deviceGroupId?: string;\n}\n\n/** Request of the action to create a signed device capability image */\nexport interface GenerateCapabilityImageRequest {\n  /** List of capabilities to create */\n  capabilities: CapabilityType[];\n}\n\n/** Alias for ProvisioningState */\nexport type ProvisioningState =\n  | string\n  | \"Succeeded\"\n  | \"Failed\"\n  | \"Canceled\"\n  | \"Provisioning\"\n  | \"Updating\"\n  | \"Deleting\"\n  | \"Accepted\";\n/** The kind of entity that created the resource. */\nexport type CreatedByType = \"User\" | \"Application\" | \"ManagedIdentity\" | \"Key\";\n/** The private endpoint connection status */\nexport type PrivateEndpointServiceConnectionStatus =\n  | \"Pending\"\n  | \"Approved\"\n  | \"Rejected\";\n/** The provisioning state of the connection */\nexport type PrivateEndpointConnectionProvisioningState =\n  | \"Succeeded\"\n  | \"Failed\"\n  | \"Canceled\"\n  | \"Creating\"\n  | \"Deleting\";\n/** Alias for RegionalDataBoundary */\nexport type RegionalDataBoundary = string | \"None\" | \"EU\";\n/** Alias for ImageType */\nexport type ImageType =\n  | string\n  | \"InvalidImageType\"\n  | \"OneBl\"\n  | \"PlutonRuntime\"\n  | \"WifiFirmware\"\n  | \"SecurityMonitor\"\n  | \"NormalWorldLoader\"\n  | \"NormalWorldDtb\"\n  | \"NormalWorldKernel\"\n  | \"RootFs\"\n  | \"Services\"\n  | \"Applications\"\n  | \"FwConfig\"\n  | \"BootManifest\"\n  | \"Nwfs\"\n  | \"TrustedKeystore\"\n  | \"Policy\"\n  | \"CustomerBoardConfig\"\n  | \"UpdateCertStore\"\n  | \"BaseSystemUpdateManifest\"\n  | \"FirmwareUpdateManifest\"\n  | \"CustomerUpdateManifest\"\n  | \"RecoveryManifest\"\n  | \"ManifestSet\"\n  | \"Other\";\n/** Alias for OSFeedType */\nexport type OSFeedType = string | \"Retail\" | \"RetailEval\";\n/** Alias for UpdatePolicy */\nexport type UpdatePolicy = string | \"UpdateAll\" | \"No3rdPartyAppUpdates\";\n/** Alias for AllowCrashDumpCollection */\nexport type AllowCrashDumpCollection = string | \"Enabled\" | \"Disabled\";\n/** Alias for CertificateStatus */\nexport type CertificateStatus =\n  | string\n  | \"Active\"\n  | \"Inactive\"\n  | \"Expired\"\n  | \"Revoked\";\n/** Alias for CapabilityType */\nexport type CapabilityType =\n  | string\n  | \"ApplicationDevelopment\"\n  | \"FieldServicing\";\n"]}