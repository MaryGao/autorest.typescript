import { PollerLike, OperationState } from "@azure/core-lro";
import { Device, DeviceUpdate, DeviceListResult, GenerateCapabilityImageRequest, SignedCapabilityImageResponse } from "../../models/models.js";
import { PagedAsyncIterableIterator } from "../../models/pagingTypes.js";
import { AzureSphereContext as Client, DevicesCreateOrUpdate200Response, DevicesCreateOrUpdate201Response, DevicesCreateOrUpdateDefaultResponse, DevicesCreateOrUpdateLogicalResponse, DevicesDelete200Response, DevicesDelete202Response, DevicesDelete204Response, DevicesDeleteDefaultResponse, DevicesDeleteLogicalResponse, DevicesGenerateCapabilityImage200Response, DevicesGenerateCapabilityImage202Response, DevicesGenerateCapabilityImageDefaultResponse, DevicesGenerateCapabilityImageLogicalResponse, DevicesGet200Response, DevicesGetDefaultResponse, DevicesListByDeviceGroup200Response, DevicesListByDeviceGroupDefaultResponse, DevicesUpdate200Response, DevicesUpdate202Response, DevicesUpdateDefaultResponse } from "../../rest/index.js";
import { StreamableMethod } from "@azure-rest/core-client";
import { DevicesGetOptionalParams, DevicesCreateOrUpdateOptionalParams, DevicesUpdateOptionalParams, DevicesDeleteOptionalParams, DevicesListByDeviceGroupOptionalParams, DevicesGenerateCapabilityImageOptionalParams } from "../../models/options.js";
export declare function _getSend(context: Client, subscriptionId: string, resourceGroupName: string, catalogName: string, productName: string, deviceGroupName: string, deviceName: string, options?: DevicesGetOptionalParams): StreamableMethod<DevicesGet200Response | DevicesGetDefaultResponse>;
export declare function _getDeserialize(result: DevicesGet200Response | DevicesGetDefaultResponse): Promise<Device>;
/** Get a Device. Use '.unassigned' or '.default' for the device group and product names when a device does not belong to a device group and product. */
export declare function get(context: Client, subscriptionId: string, resourceGroupName: string, catalogName: string, productName: string, deviceGroupName: string, deviceName: string, options?: DevicesGetOptionalParams): Promise<Device>;
export declare function _createOrUpdateSend(context: Client, subscriptionId: string, resourceGroupName: string, catalogName: string, productName: string, deviceGroupName: string, deviceName: string, resource: Device, options?: DevicesCreateOrUpdateOptionalParams): StreamableMethod<DevicesCreateOrUpdate200Response | DevicesCreateOrUpdate201Response | DevicesCreateOrUpdateDefaultResponse | DevicesCreateOrUpdateLogicalResponse>;
export declare function _createOrUpdateDeserialize(result: DevicesCreateOrUpdate200Response | DevicesCreateOrUpdate201Response | DevicesCreateOrUpdateDefaultResponse | DevicesCreateOrUpdateLogicalResponse): Promise<Device>;
/** Create a Device. Use '.unassigned' or '.default' for the device group and product names to claim a device to the catalog only. */
export declare function createOrUpdate(context: Client, subscriptionId: string, resourceGroupName: string, catalogName: string, productName: string, deviceGroupName: string, deviceName: string, resource: Device, options?: DevicesCreateOrUpdateOptionalParams): PollerLike<OperationState<Device>, Device>;
export declare function _updateSend(context: Client, subscriptionId: string, resourceGroupName: string, catalogName: string, productName: string, deviceGroupName: string, deviceName: string, properties: DeviceUpdate, options?: DevicesUpdateOptionalParams): StreamableMethod<DevicesUpdate200Response | DevicesUpdate202Response | DevicesUpdateDefaultResponse>;
export declare function _updateDeserialize(result: DevicesUpdate200Response | DevicesUpdate202Response | DevicesUpdateDefaultResponse): Promise<Device>;
/** Update a Device. Use '.unassigned' or '.default' for the device group and product names to move a device to the catalog level. */
export declare function update(context: Client, subscriptionId: string, resourceGroupName: string, catalogName: string, productName: string, deviceGroupName: string, deviceName: string, properties: DeviceUpdate, options?: DevicesUpdateOptionalParams): Promise<Device>;
export declare function _$deleteSend(context: Client, subscriptionId: string, resourceGroupName: string, catalogName: string, productName: string, deviceGroupName: string, deviceName: string, options?: DevicesDeleteOptionalParams): StreamableMethod<DevicesDelete200Response | DevicesDelete202Response | DevicesDelete204Response | DevicesDeleteDefaultResponse | DevicesDeleteLogicalResponse>;
export declare function _$deleteDeserialize(result: DevicesDelete200Response | DevicesDelete202Response | DevicesDelete204Response | DevicesDeleteDefaultResponse | DevicesDeleteLogicalResponse): Promise<void>;
/** Delete a Device */
/**
 *  @fixme delete is a reserved word that cannot be used as an operation name.
 *         Please add @clientName("clientName") or @clientName("<JS-Specific-Name>", "javascript")
 *         to the operation to override the generated name.
 */
export declare function $delete(context: Client, subscriptionId: string, resourceGroupName: string, catalogName: string, productName: string, deviceGroupName: string, deviceName: string, options?: DevicesDeleteOptionalParams): PollerLike<OperationState<void>, void>;
export declare function _listByDeviceGroupSend(context: Client, subscriptionId: string, resourceGroupName: string, catalogName: string, productName: string, deviceGroupName: string, options?: DevicesListByDeviceGroupOptionalParams): StreamableMethod<DevicesListByDeviceGroup200Response | DevicesListByDeviceGroupDefaultResponse>;
export declare function _listByDeviceGroupDeserialize(result: DevicesListByDeviceGroup200Response | DevicesListByDeviceGroupDefaultResponse): Promise<DeviceListResult>;
/** List Device resources by DeviceGroup. '.default' and '.unassigned' are system defined values and cannot be used for product or device group name. */
export declare function listByDeviceGroup(context: Client, subscriptionId: string, resourceGroupName: string, catalogName: string, productName: string, deviceGroupName: string, options?: DevicesListByDeviceGroupOptionalParams): PagedAsyncIterableIterator<Device>;
export declare function _generateCapabilityImageSend(context: Client, subscriptionId: string, resourceGroupName: string, catalogName: string, productName: string, deviceGroupName: string, deviceName: string, body: GenerateCapabilityImageRequest, options?: DevicesGenerateCapabilityImageOptionalParams): StreamableMethod<DevicesGenerateCapabilityImage200Response | DevicesGenerateCapabilityImage202Response | DevicesGenerateCapabilityImageDefaultResponse | DevicesGenerateCapabilityImageLogicalResponse>;
export declare function _generateCapabilityImageDeserialize(result: DevicesGenerateCapabilityImage200Response | DevicesGenerateCapabilityImage202Response | DevicesGenerateCapabilityImageDefaultResponse | DevicesGenerateCapabilityImageLogicalResponse): Promise<SignedCapabilityImageResponse>;
/** Generates the capability image for the device. Use '.unassigned' or '.default' for the device group and product names to generate the image for a device that does not belong to a specific device group and product. */
export declare function generateCapabilityImage(context: Client, subscriptionId: string, resourceGroupName: string, catalogName: string, productName: string, deviceGroupName: string, deviceName: string, body: GenerateCapabilityImageRequest, options?: DevicesGenerateCapabilityImageOptionalParams): PollerLike<OperationState<SignedCapabilityImageResponse>, SignedCapabilityImageResponse>;
//# sourceMappingURL=index.d.ts.map