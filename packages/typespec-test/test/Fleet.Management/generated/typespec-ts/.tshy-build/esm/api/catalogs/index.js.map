{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/api/catalogs/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { getLongRunningPoller } from \"../pollingHelpers.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  Device,\n  DeviceListResult,\n  Deployment,\n  Image,\n  DeploymentListResult,\n  DeviceGroup,\n  DeviceGroupListResult,\n  CountDevicesResponse,\n  Catalog,\n  CatalogUpdate,\n  CatalogListResult,\n  ListDeviceGroupsRequest,\n  PagedDeviceInsight,\n  DeviceInsight,\n} from \"../../models/models.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport { buildPagedAsyncIterator } from \"../pagingHelpers.js\";\nimport {\n  isUnexpected,\n  AzureSphereContext as Client,\n  CatalogsCountDevices200Response,\n  CatalogsCountDevicesDefaultResponse,\n  CatalogsCreateOrUpdate200Response,\n  CatalogsCreateOrUpdate201Response,\n  CatalogsCreateOrUpdateDefaultResponse,\n  CatalogsCreateOrUpdateLogicalResponse,\n  CatalogsDelete200Response,\n  CatalogsDelete202Response,\n  CatalogsDelete204Response,\n  CatalogsDeleteDefaultResponse,\n  CatalogsDeleteLogicalResponse,\n  CatalogsGet200Response,\n  CatalogsGetDefaultResponse,\n  CatalogsListByResourceGroup200Response,\n  CatalogsListByResourceGroupDefaultResponse,\n  CatalogsListBySubscription200Response,\n  CatalogsListBySubscriptionDefaultResponse,\n  CatalogsListDeployments200Response,\n  CatalogsListDeploymentsDefaultResponse,\n  CatalogsListDeviceGroups200Response,\n  CatalogsListDeviceGroupsDefaultResponse,\n  CatalogsListDeviceInsights200Response,\n  CatalogsListDeviceInsightsDefaultResponse,\n  CatalogsListDevices200Response,\n  CatalogsListDevicesDefaultResponse,\n  CatalogsUpdate200Response,\n  CatalogsUpdateDefaultResponse,\n  CatalogsUploadImage202Response,\n  CatalogsUploadImageDefaultResponse,\n  CatalogsUploadImageLogicalResponse,\n} from \"../../rest/index.js\";\nimport {\n  StreamableMethod,\n  operationOptionsToRequestParameters,\n  createRestError,\n} from \"@azure-rest/core-client\";\nimport {\n  CatalogsGetOptionalParams,\n  CatalogsCreateOrUpdateOptionalParams,\n  CatalogsUpdateOptionalParams,\n  CatalogsDeleteOptionalParams,\n  CatalogsListByResourceGroupOptionalParams,\n  CatalogsListBySubscriptionOptionalParams,\n  CatalogsCountDevicesOptionalParams,\n  CatalogsListDeploymentsOptionalParams,\n  CatalogsListDeviceGroupsOptionalParams,\n  CatalogsListDeviceInsightsOptionalParams,\n  CatalogsListDevicesOptionalParams,\n  CatalogsUploadImageOptionalParams,\n} from \"../../models/options.js\";\n\nexport function _getSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: CatalogsGetOptionalParams = { requestOptions: {} },\n): StreamableMethod<CatalogsGet200Response | CatalogsGetDefaultResponse> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n    )\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _getDeserialize(\n  result: CatalogsGet200Response | CatalogsGetDefaultResponse,\n): Promise<Catalog> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    location: result.body[\"location\"],\n    tags: result.body[\"tags\"],\n    id: result.body[\"id\"],\n    type: result.body[\"type\"],\n    systemData: !result.body.systemData\n      ? undefined\n      : {\n          createdBy: result.body.systemData?.[\"createdBy\"],\n          createdByType: result.body.systemData?.[\"createdByType\"],\n          createdAt:\n            result.body.systemData?.[\"createdAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"createdAt\"])\n              : undefined,\n          lastModifiedBy: result.body.systemData?.[\"lastModifiedBy\"],\n          lastModifiedByType: result.body.systemData?.[\"lastModifiedByType\"],\n          lastModifiedAt:\n            result.body.systemData?.[\"lastModifiedAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"lastModifiedAt\"])\n              : undefined,\n        },\n    properties: !result.body.properties\n      ? undefined\n      : {\n          tenantId: result.body.properties?.[\"tenantId\"],\n          provisioningState: result.body.properties?.[\"provisioningState\"],\n        },\n  };\n}\n\n/** Get a Catalog */\nexport async function get(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: CatalogsGetOptionalParams = { requestOptions: {} },\n): Promise<Catalog> {\n  const result = await _getSend(\n    context,\n    subscriptionId,\n    resourceGroupName,\n    catalogName,\n    options,\n  );\n  return _getDeserialize(result);\n}\n\nexport function _createOrUpdateSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  resource: Catalog,\n  options: CatalogsCreateOrUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | CatalogsCreateOrUpdate200Response\n  | CatalogsCreateOrUpdate201Response\n  | CatalogsCreateOrUpdateDefaultResponse\n  | CatalogsCreateOrUpdateLogicalResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n    )\n    .put({\n      ...operationOptionsToRequestParameters(options),\n      body: {\n        location: resource[\"location\"],\n        tags: resource[\"tags\"],\n        properties: !resource.properties ? undefined : {},\n      },\n    });\n}\n\nexport async function _createOrUpdateDeserialize(\n  result:\n    | CatalogsCreateOrUpdate200Response\n    | CatalogsCreateOrUpdate201Response\n    | CatalogsCreateOrUpdateDefaultResponse\n    | CatalogsCreateOrUpdateLogicalResponse,\n): Promise<Catalog> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  result = result as CatalogsCreateOrUpdateLogicalResponse;\n  return {\n    location: result.body[\"location\"],\n    tags: result.body[\"tags\"],\n    id: result.body[\"id\"],\n    type: result.body[\"type\"],\n    systemData: !result.body.systemData\n      ? undefined\n      : {\n          createdBy: result.body.systemData?.[\"createdBy\"],\n          createdByType: result.body.systemData?.[\"createdByType\"],\n          createdAt:\n            result.body.systemData?.[\"createdAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"createdAt\"])\n              : undefined,\n          lastModifiedBy: result.body.systemData?.[\"lastModifiedBy\"],\n          lastModifiedByType: result.body.systemData?.[\"lastModifiedByType\"],\n          lastModifiedAt:\n            result.body.systemData?.[\"lastModifiedAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"lastModifiedAt\"])\n              : undefined,\n        },\n    properties: !result.body.properties\n      ? undefined\n      : {\n          tenantId: result.body.properties?.[\"tenantId\"],\n          provisioningState: result.body.properties?.[\"provisioningState\"],\n        },\n  };\n}\n\n/** Create a Catalog */\nexport function createOrUpdate(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  resource: Catalog,\n  options: CatalogsCreateOrUpdateOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<Catalog>, Catalog> {\n  return getLongRunningPoller(context, _createOrUpdateDeserialize, {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _createOrUpdateSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        catalogName,\n        resource,\n        options,\n      ),\n  }) as PollerLike<OperationState<Catalog>, Catalog>;\n}\n\nexport function _updateSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  properties: CatalogUpdate,\n  options: CatalogsUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod<CatalogsUpdate200Response | CatalogsUpdateDefaultResponse> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n    )\n    .patch({\n      ...operationOptionsToRequestParameters(options),\n      body: { tags: properties[\"tags\"] },\n    });\n}\n\nexport async function _updateDeserialize(\n  result: CatalogsUpdate200Response | CatalogsUpdateDefaultResponse,\n): Promise<Catalog> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    location: result.body[\"location\"],\n    tags: result.body[\"tags\"],\n    id: result.body[\"id\"],\n    type: result.body[\"type\"],\n    systemData: !result.body.systemData\n      ? undefined\n      : {\n          createdBy: result.body.systemData?.[\"createdBy\"],\n          createdByType: result.body.systemData?.[\"createdByType\"],\n          createdAt:\n            result.body.systemData?.[\"createdAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"createdAt\"])\n              : undefined,\n          lastModifiedBy: result.body.systemData?.[\"lastModifiedBy\"],\n          lastModifiedByType: result.body.systemData?.[\"lastModifiedByType\"],\n          lastModifiedAt:\n            result.body.systemData?.[\"lastModifiedAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"lastModifiedAt\"])\n              : undefined,\n        },\n    properties: !result.body.properties\n      ? undefined\n      : {\n          tenantId: result.body.properties?.[\"tenantId\"],\n          provisioningState: result.body.properties?.[\"provisioningState\"],\n        },\n  };\n}\n\n/** Update a Catalog */\nexport async function update(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  properties: CatalogUpdate,\n  options: CatalogsUpdateOptionalParams = { requestOptions: {} },\n): Promise<Catalog> {\n  const result = await _updateSend(\n    context,\n    subscriptionId,\n    resourceGroupName,\n    catalogName,\n    properties,\n    options,\n  );\n  return _updateDeserialize(result);\n}\n\nexport function _$deleteSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: CatalogsDeleteOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | CatalogsDelete200Response\n  | CatalogsDelete202Response\n  | CatalogsDelete204Response\n  | CatalogsDeleteDefaultResponse\n  | CatalogsDeleteLogicalResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n    )\n    .delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _$deleteDeserialize(\n  result:\n    | CatalogsDelete200Response\n    | CatalogsDelete202Response\n    | CatalogsDelete204Response\n    | CatalogsDeleteDefaultResponse\n    | CatalogsDeleteLogicalResponse,\n): Promise<void> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  result = result as CatalogsDeleteLogicalResponse;\n  return;\n}\n\n/** Delete a Catalog */\n/**\n *  @fixme delete is a reserved word that cannot be used as an operation name.\n *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n *         to the operation to override the generated name.\n */\nexport function $delete(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: CatalogsDeleteOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _$deleteDeserialize, {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _$deleteSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        catalogName,\n        options,\n      ),\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _listByResourceGroupSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  options: CatalogsListByResourceGroupOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | CatalogsListByResourceGroup200Response\n  | CatalogsListByResourceGroupDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs\",\n      subscriptionId,\n      resourceGroupName,\n    )\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _listByResourceGroupDeserialize(\n  result:\n    | CatalogsListByResourceGroup200Response\n    | CatalogsListByResourceGroupDefaultResponse,\n): Promise<CatalogListResult> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    value: result.body[\"value\"].map((p) => ({\n      location: p[\"location\"],\n      tags: p[\"tags\"],\n      id: p[\"id\"],\n      type: p[\"type\"],\n      systemData: !p.systemData\n        ? undefined\n        : {\n            createdBy: p.systemData?.[\"createdBy\"],\n            createdByType: p.systemData?.[\"createdByType\"],\n            createdAt:\n              p.systemData?.[\"createdAt\"] !== undefined\n                ? new Date(p.systemData?.[\"createdAt\"])\n                : undefined,\n            lastModifiedBy: p.systemData?.[\"lastModifiedBy\"],\n            lastModifiedByType: p.systemData?.[\"lastModifiedByType\"],\n            lastModifiedAt:\n              p.systemData?.[\"lastModifiedAt\"] !== undefined\n                ? new Date(p.systemData?.[\"lastModifiedAt\"])\n                : undefined,\n          },\n      properties: !p.properties\n        ? undefined\n        : {\n            tenantId: p.properties?.[\"tenantId\"],\n            provisioningState: p.properties?.[\"provisioningState\"],\n          },\n    })),\n    nextLink: result.body[\"nextLink\"],\n  };\n}\n\n/** List Catalog resources by resource group */\nexport function listByResourceGroup(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  options: CatalogsListByResourceGroupOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<Catalog> {\n  return buildPagedAsyncIterator(\n    context,\n    () =>\n      _listByResourceGroupSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        options,\n      ),\n    _listByResourceGroupDeserialize,\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _listBySubscriptionSend(\n  context: Client,\n  subscriptionId: string,\n  options: CatalogsListBySubscriptionOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | CatalogsListBySubscription200Response\n  | CatalogsListBySubscriptionDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/providers/Microsoft.AzureSphere/catalogs\",\n      subscriptionId,\n    )\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _listBySubscriptionDeserialize(\n  result:\n    | CatalogsListBySubscription200Response\n    | CatalogsListBySubscriptionDefaultResponse,\n): Promise<CatalogListResult> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    value: result.body[\"value\"].map((p) => ({\n      location: p[\"location\"],\n      tags: p[\"tags\"],\n      id: p[\"id\"],\n      type: p[\"type\"],\n      systemData: !p.systemData\n        ? undefined\n        : {\n            createdBy: p.systemData?.[\"createdBy\"],\n            createdByType: p.systemData?.[\"createdByType\"],\n            createdAt:\n              p.systemData?.[\"createdAt\"] !== undefined\n                ? new Date(p.systemData?.[\"createdAt\"])\n                : undefined,\n            lastModifiedBy: p.systemData?.[\"lastModifiedBy\"],\n            lastModifiedByType: p.systemData?.[\"lastModifiedByType\"],\n            lastModifiedAt:\n              p.systemData?.[\"lastModifiedAt\"] !== undefined\n                ? new Date(p.systemData?.[\"lastModifiedAt\"])\n                : undefined,\n          },\n      properties: !p.properties\n        ? undefined\n        : {\n            tenantId: p.properties?.[\"tenantId\"],\n            provisioningState: p.properties?.[\"provisioningState\"],\n          },\n    })),\n    nextLink: result.body[\"nextLink\"],\n  };\n}\n\n/** List Catalog resources by subscription ID */\nexport function listBySubscription(\n  context: Client,\n  subscriptionId: string,\n  options: CatalogsListBySubscriptionOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<Catalog> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listBySubscriptionSend(context, subscriptionId, options),\n    _listBySubscriptionDeserialize,\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _countDevicesSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: CatalogsCountDevicesOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  CatalogsCountDevices200Response | CatalogsCountDevicesDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/countDevices\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n    )\n    .post({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _countDevicesDeserialize(\n  result: CatalogsCountDevices200Response | CatalogsCountDevicesDefaultResponse,\n): Promise<CountDevicesResponse> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    value: result.body[\"value\"],\n  };\n}\n\n/** Counts devices in catalog. */\nexport async function countDevices(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: CatalogsCountDevicesOptionalParams = { requestOptions: {} },\n): Promise<CountDevicesResponse> {\n  const result = await _countDevicesSend(\n    context,\n    subscriptionId,\n    resourceGroupName,\n    catalogName,\n    options,\n  );\n  return _countDevicesDeserialize(result);\n}\n\nexport function _listDeploymentsSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: CatalogsListDeploymentsOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  CatalogsListDeployments200Response | CatalogsListDeploymentsDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/listDeployments\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n    )\n    .post({\n      ...operationOptionsToRequestParameters(options),\n      queryParameters: {\n        $filter: options?.filter,\n        $top: options?.top,\n        $skip: options?.skip,\n        $maxpagesize: options?.maxpagesize,\n      },\n    });\n}\n\nexport async function _listDeploymentsDeserialize(\n  result:\n    | CatalogsListDeployments200Response\n    | CatalogsListDeploymentsDefaultResponse,\n): Promise<DeploymentListResult> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    value: result.body[\"value\"].map((p) => ({\n      id: p[\"id\"],\n      type: p[\"type\"],\n      systemData: !p.systemData\n        ? undefined\n        : {\n            createdBy: p.systemData?.[\"createdBy\"],\n            createdByType: p.systemData?.[\"createdByType\"],\n            createdAt:\n              p.systemData?.[\"createdAt\"] !== undefined\n                ? new Date(p.systemData?.[\"createdAt\"])\n                : undefined,\n            lastModifiedBy: p.systemData?.[\"lastModifiedBy\"],\n            lastModifiedByType: p.systemData?.[\"lastModifiedByType\"],\n            lastModifiedAt:\n              p.systemData?.[\"lastModifiedAt\"] !== undefined\n                ? new Date(p.systemData?.[\"lastModifiedAt\"])\n                : undefined,\n          },\n      properties: !p.properties\n        ? undefined\n        : {\n            deploymentId: p.properties?.[\"deploymentId\"],\n            deployedImages:\n              p.properties?.[\"deployedImages\"] === undefined\n                ? p.properties?.[\"deployedImages\"]\n                : p.properties?.[\"deployedImages\"].map((p) => ({\n                    id: p[\"id\"],\n                    type: p[\"type\"],\n                    systemData: !p.systemData\n                      ? undefined\n                      : {\n                          createdBy: p.systemData?.[\"createdBy\"],\n                          createdByType: p.systemData?.[\"createdByType\"],\n                          createdAt:\n                            p.systemData?.[\"createdAt\"] !== undefined\n                              ? new Date(p.systemData?.[\"createdAt\"])\n                              : undefined,\n                          lastModifiedBy: p.systemData?.[\"lastModifiedBy\"],\n                          lastModifiedByType:\n                            p.systemData?.[\"lastModifiedByType\"],\n                          lastModifiedAt:\n                            p.systemData?.[\"lastModifiedAt\"] !== undefined\n                              ? new Date(p.systemData?.[\"lastModifiedAt\"])\n                              : undefined,\n                        },\n                    properties: !p.properties\n                      ? undefined\n                      : {\n                          image: p.properties?.[\"image\"],\n                          imageId: p.properties?.[\"imageId\"],\n                          imageName: p.properties?.[\"imageName\"],\n                          regionalDataBoundary:\n                            p.properties?.[\"regionalDataBoundary\"],\n                          uri: p.properties?.[\"uri\"],\n                          description: p.properties?.[\"description\"],\n                          componentId: p.properties?.[\"componentId\"],\n                          imageType: p.properties?.[\"imageType\"],\n                          provisioningState:\n                            p.properties?.[\"provisioningState\"],\n                        },\n                  })),\n            deploymentDateUtc:\n              p.properties?.[\"deploymentDateUtc\"] !== undefined\n                ? new Date(p.properties?.[\"deploymentDateUtc\"])\n                : undefined,\n            provisioningState: p.properties?.[\"provisioningState\"],\n          },\n    })),\n    nextLink: result.body[\"nextLink\"],\n  };\n}\n\n/** Lists deployments for catalog. */\nexport function listDeployments(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: CatalogsListDeploymentsOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<Deployment> {\n  return buildPagedAsyncIterator(\n    context,\n    () =>\n      _listDeploymentsSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        catalogName,\n        options,\n      ),\n    _listDeploymentsDeserialize,\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _listDeviceGroupsSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  body: ListDeviceGroupsRequest,\n  options: CatalogsListDeviceGroupsOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  CatalogsListDeviceGroups200Response | CatalogsListDeviceGroupsDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/listDeviceGroups\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n    )\n    .post({\n      ...operationOptionsToRequestParameters(options),\n      queryParameters: {\n        $filter: options?.filter,\n        $top: options?.top,\n        $skip: options?.skip,\n        $maxpagesize: options?.maxpagesize,\n      },\n      body: { deviceGroupName: body[\"deviceGroupName\"] },\n    });\n}\n\nexport async function _listDeviceGroupsDeserialize(\n  result:\n    | CatalogsListDeviceGroups200Response\n    | CatalogsListDeviceGroupsDefaultResponse,\n): Promise<DeviceGroupListResult> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    value: result.body[\"value\"].map((p) => ({\n      id: p[\"id\"],\n      type: p[\"type\"],\n      systemData: !p.systemData\n        ? undefined\n        : {\n            createdBy: p.systemData?.[\"createdBy\"],\n            createdByType: p.systemData?.[\"createdByType\"],\n            createdAt:\n              p.systemData?.[\"createdAt\"] !== undefined\n                ? new Date(p.systemData?.[\"createdAt\"])\n                : undefined,\n            lastModifiedBy: p.systemData?.[\"lastModifiedBy\"],\n            lastModifiedByType: p.systemData?.[\"lastModifiedByType\"],\n            lastModifiedAt:\n              p.systemData?.[\"lastModifiedAt\"] !== undefined\n                ? new Date(p.systemData?.[\"lastModifiedAt\"])\n                : undefined,\n          },\n      properties: !p.properties\n        ? undefined\n        : {\n            description: p.properties?.[\"description\"],\n            osFeedType: p.properties?.[\"osFeedType\"],\n            updatePolicy: p.properties?.[\"updatePolicy\"],\n            allowCrashDumpsCollection:\n              p.properties?.[\"allowCrashDumpsCollection\"],\n            regionalDataBoundary: p.properties?.[\"regionalDataBoundary\"],\n            hasDeployment: p.properties?.[\"hasDeployment\"],\n            provisioningState: p.properties?.[\"provisioningState\"],\n          },\n    })),\n    nextLink: result.body[\"nextLink\"],\n  };\n}\n\n/** List the device groups for the catalog. */\nexport function listDeviceGroups(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  body: ListDeviceGroupsRequest,\n  options: CatalogsListDeviceGroupsOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<DeviceGroup> {\n  return buildPagedAsyncIterator(\n    context,\n    () =>\n      _listDeviceGroupsSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        catalogName,\n        body,\n        options,\n      ),\n    _listDeviceGroupsDeserialize,\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _listDeviceInsightsSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: CatalogsListDeviceInsightsOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | CatalogsListDeviceInsights200Response\n  | CatalogsListDeviceInsightsDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/listDeviceInsights\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n    )\n    .post({\n      ...operationOptionsToRequestParameters(options),\n      queryParameters: {\n        $filter: options?.filter,\n        $top: options?.top,\n        $skip: options?.skip,\n        $maxpagesize: options?.maxpagesize,\n      },\n    });\n}\n\nexport async function _listDeviceInsightsDeserialize(\n  result:\n    | CatalogsListDeviceInsights200Response\n    | CatalogsListDeviceInsightsDefaultResponse,\n): Promise<PagedDeviceInsight> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    value: result.body[\"value\"].map((p) => ({\n      deviceId: p[\"deviceId\"],\n      description: p[\"description\"],\n      startTimestampUtc: new Date(p[\"startTimestampUtc\"]),\n      endTimestampUtc: new Date(p[\"endTimestampUtc\"]),\n      eventCategory: p[\"eventCategory\"],\n      eventClass: p[\"eventClass\"],\n      eventType: p[\"eventType\"],\n      eventCount: p[\"eventCount\"],\n    })),\n    nextLink: result.body[\"nextLink\"],\n  };\n}\n\n/** Lists device insights for catalog. */\nexport function listDeviceInsights(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: CatalogsListDeviceInsightsOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<DeviceInsight> {\n  return buildPagedAsyncIterator(\n    context,\n    () =>\n      _listDeviceInsightsSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        catalogName,\n        options,\n      ),\n    _listDeviceInsightsDeserialize,\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _listDevicesSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: CatalogsListDevicesOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  CatalogsListDevices200Response | CatalogsListDevicesDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/listDevices\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n    )\n    .post({\n      ...operationOptionsToRequestParameters(options),\n      queryParameters: {\n        $filter: options?.filter,\n        $top: options?.top,\n        $skip: options?.skip,\n        $maxpagesize: options?.maxpagesize,\n      },\n    });\n}\n\nexport async function _listDevicesDeserialize(\n  result: CatalogsListDevices200Response | CatalogsListDevicesDefaultResponse,\n): Promise<DeviceListResult> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    value: result.body[\"value\"].map((p) => ({\n      id: p[\"id\"],\n      type: p[\"type\"],\n      systemData: !p.systemData\n        ? undefined\n        : {\n            createdBy: p.systemData?.[\"createdBy\"],\n            createdByType: p.systemData?.[\"createdByType\"],\n            createdAt:\n              p.systemData?.[\"createdAt\"] !== undefined\n                ? new Date(p.systemData?.[\"createdAt\"])\n                : undefined,\n            lastModifiedBy: p.systemData?.[\"lastModifiedBy\"],\n            lastModifiedByType: p.systemData?.[\"lastModifiedByType\"],\n            lastModifiedAt:\n              p.systemData?.[\"lastModifiedAt\"] !== undefined\n                ? new Date(p.systemData?.[\"lastModifiedAt\"])\n                : undefined,\n          },\n      properties: !p.properties\n        ? undefined\n        : {\n            deviceId: p.properties?.[\"deviceId\"],\n            chipSku: p.properties?.[\"chipSku\"],\n            lastAvailableOsVersion: p.properties?.[\"lastAvailableOsVersion\"],\n            lastInstalledOsVersion: p.properties?.[\"lastInstalledOsVersion\"],\n            lastOsUpdateUtc:\n              p.properties?.[\"lastOsUpdateUtc\"] !== undefined\n                ? new Date(p.properties?.[\"lastOsUpdateUtc\"])\n                : undefined,\n            lastUpdateRequestUtc:\n              p.properties?.[\"lastUpdateRequestUtc\"] !== undefined\n                ? new Date(p.properties?.[\"lastUpdateRequestUtc\"])\n                : undefined,\n            provisioningState: p.properties?.[\"provisioningState\"],\n          },\n    })),\n    nextLink: result.body[\"nextLink\"],\n  };\n}\n\n/** Lists devices for catalog. */\nexport function listDevices(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  options: CatalogsListDevicesOptionalParams = { requestOptions: {} },\n): PagedAsyncIterableIterator<Device> {\n  return buildPagedAsyncIterator(\n    context,\n    () =>\n      _listDevicesSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        catalogName,\n        options,\n      ),\n    _listDevicesDeserialize,\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _uploadImageSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  body: Image,\n  options: CatalogsUploadImageOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | CatalogsUploadImage202Response\n  | CatalogsUploadImageDefaultResponse\n  | CatalogsUploadImageLogicalResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/uploadImage\",\n      subscriptionId,\n      resourceGroupName,\n      catalogName,\n    )\n    .post({\n      ...operationOptionsToRequestParameters(options),\n      body: {\n        properties: !body.properties\n          ? undefined\n          : {\n              image: body.properties?.[\"image\"],\n              imageId: body.properties?.[\"imageId\"],\n              regionalDataBoundary: body.properties?.[\"regionalDataBoundary\"],\n            },\n      },\n    });\n}\n\nexport async function _uploadImageDeserialize(\n  result:\n    | CatalogsUploadImage202Response\n    | CatalogsUploadImageDefaultResponse\n    | CatalogsUploadImageLogicalResponse,\n): Promise<void> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  result = result as CatalogsUploadImageLogicalResponse;\n  return;\n}\n\n/** Creates an image. Use this action when the image ID is unknown. */\nexport function uploadImage(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  catalogName: string,\n  body: Image,\n  options: CatalogsUploadImageOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _uploadImageDeserialize, {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _uploadImageSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        catalogName,\n        body,\n        options,\n      ),\n  }) as PollerLike<OperationState<void>, void>;\n}\n"]}